name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: slicer
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Install PostgreSQL client (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev postgresql-client

    - name: Install PostgreSQL client (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libpq postgresql
        brew link --force libpq

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/slicer 