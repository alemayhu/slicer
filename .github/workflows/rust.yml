name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  POSTGRES_DB: slicer
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Start PostgreSQL on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo systemctl start postgresql.service
          sudo -u postgres psql -c "DO \$\$
          BEGIN
            IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'postgres') THEN
              CREATE USER postgres WITH PASSWORD 'postgres' SUPERUSER;
            ELSE
              ALTER USER postgres WITH PASSWORD 'postgres' SUPERUSER;
            END IF;
          END
          \$\$;"
          sudo -u postgres psql -c "CREATE DATABASE slicer;" || true

      - name: Start PostgreSQL on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install postgresql@14
          brew services start postgresql@14
          sleep 5
          createuser -s postgres
          createdb slicer

      - name: Install PostgreSQL client (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev postgresql-client

      - name: Install PostgreSQL client (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install libpq
          brew link --force libpq

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --verbose
        env:
          PKG_CONFIG_PATH: ${{ matrix.os == 'macos-latest' && '/opt/homebrew/opt/libpq/lib/pkgconfig:/opt/homebrew/opt/postgresql@14/lib/pkgconfig' || '' }}
          LIBRARY_PATH: ${{ matrix.os == 'macos-latest' && '/opt/homebrew/opt/libpq/lib:/opt/homebrew/opt/postgresql@14/lib' || '' }}
          LDFLAGS: ${{ matrix.os == 'macos-latest' && '-L/opt/homebrew/opt/libpq/lib -L/opt/homebrew/opt/postgresql@14/lib' || '' }}
          CPPFLAGS: ${{ matrix.os == 'macos-latest' && '-I/opt/homebrew/opt/libpq/include -I/opt/homebrew/opt/postgresql@14/include' || '' }}

      - name: Run tests
        run: cargo test --verbose
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/slicer
          PKG_CONFIG_PATH: ${{ matrix.os == 'macos-latest' && '/opt/homebrew/opt/libpq/lib/pkgconfig:/opt/homebrew/opt/postgresql@14/lib/pkgconfig' || '' }}
          LIBRARY_PATH: ${{ matrix.os == 'macos-latest' && '/opt/homebrew/opt/libpq/lib:/opt/homebrew/opt/postgresql@14/lib' || '' }}
          LDFLAGS: ${{ matrix.os == 'macos-latest' && '-L/opt/homebrew/opt/libpq/lib -L/opt/homebrew/opt/postgresql@14/lib' || '' }}
          CPPFLAGS: ${{ matrix.os == 'macos-latest' && '-I/opt/homebrew/opt/libpq/include -I/opt/homebrew/opt/postgresql@14/include' || '' }}
